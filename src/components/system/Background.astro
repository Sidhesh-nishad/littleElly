<canvas class="w-full h-full absolute top-0 left-0 z-[-1]">

</canvas>

<script>
    var canvases = document.querySelectorAll('canvas');
    canvases.forEach((canvas: HTMLCanvasElement) => {
      var ctx = canvas.getContext('2d') as CanvasRenderingContext2D;
  
      var width = canvas.offsetWidth;
      var height = canvas.offsetHeight;
  
      canvas.width = width;
      canvas.height = height;
  
  
      // draw lines making grid of squares
  
      var squareSize = 30;
      var squareSpacing = 0;
  
      var squareCountX = Math.ceil(width / (squareSize + squareSpacing));
      var squareCountY = Math.ceil(height / (squareSize + squareSpacing));
  
      var squareCount = squareCountX * squareCountY;
  
      var squares = [];
  
      for (var i = 0; i < squareCount; i++) {
          var x = (i % squareCountX) * (squareSize + squareSpacing);
          var y = Math.floor(i / squareCountX) * (squareSize + squareSpacing);
  
          squares.push({
              x: x,
              y: y,
              size: squareSize,
              color: '#fff'
          });
      }
  
      function draw() {
          ctx.clearRect(0, 0, width, height);
  
          // make lines
          ctx.beginPath();
  
          for (var i = 0; i < squareCountX; i++) {
              var x = i * (squareSize + squareSpacing);
  
              ctx.moveTo(x, 0);
              ctx.lineTo(x, height);
          }
  
          for (var i = 0; i < squareCountY; i++) {
              var y = i * (squareSize + squareSpacing);
  
              ctx.moveTo(0, y);
              ctx.lineTo(width, y);
          }
  
          ctx.strokeStyle = '#FBFAFF';
          ctx.stroke();

          ctx.beginPath();

          ctx.strokeStyle = '#FBFAFF'
          for (var i = 0; i < squareCountX; i++) {
            for (var j = 0; j < squareCountY; j++) {
                if ((i + 1) % 5 == 0 && (j + 1) % 5 == 0) {
                    var x = i * (squareSize + squareSpacing);
                    var y = j * (squareSize + squareSpacing);
                    ctx.moveTo(x - 6, y);
                    ctx.lineTo(x + 6, y);
                    ctx.moveTo(x, y - 6);
                    ctx.lineTo(x, y + 6);
                    
                }
            }
          }
          ctx.stroke()
      }
  
      function update() {
          // for (var i = 0; i < squares.length; i++) {
          //     var square = squares[i];
  
          //     square.color = '#000000';
          // }
  
          // var square = squares[Math.floor(Math.random() * squares.length)];
          // square.color = '#ffffff';
      }
  
      function loop() {
          draw();
          update();
  
          requestAnimationFrame(loop);
      }
  
      loop();

      window.addEventListener('resize', function () {
        width = canvas.offsetWidth;
        height = canvas.offsetHeight;
  
        canvas.width = width;
        canvas.height = height;
        draw()
      });
    })
</script>